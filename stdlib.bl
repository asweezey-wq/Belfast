fun putd d do
    var putd_buf = buffer(32)
    store8(putd_buf+31, 0x0A)
    var putd_cnt = 1;
    if d != 0 then
        var putd_is_neg = d < 0;
        if putd_is_neg then d = d * -1; end

        while d > 0 do
            store8(putd_buf+(31-putd_cnt), 0x30 + (d % 10))
            d = d / 10
            putd_cnt = putd_cnt + 1
        end

        if putd_is_neg then store8(putd_buf+(31-putd_cnt), '-'); putd_cnt = putd_cnt + 1; end
    else
        putd_cnt = 2;
        store8(putd_buf+30, 0x30)
    end

    syscall(0x2000004, 1, putd_buf + (32 - putd_cnt), putd_cnt+1)
end

fun puth h do
    var buf = buffer(32)
    var hex = "0123456789ABCDEF"
    store8(buf+31, 0x0A)
    var cnt = 1;
    if h != 0 then

        while h > 0 do
            var ch = load8(hex + (h % 16))
            store8(buf+(31-cnt), ch)
            h = h / 16
            cnt = cnt + 1
        end
    else
        cnt = 2;
        store8(buf+30, 0x30)
    end

    store8(buf+(31-cnt), 'x')
    store8(buf+(30-cnt), '0')
    cnt = cnt + 2

    syscall(0x2000004, 1, buf + (32 - cnt), cnt+1)
end

fun strlen s do
    var cnt = 0;
    var ch = load8(s)
    while ch != 0 do
        cnt = cnt + 1
        ch = load8(s+cnt)
    end
    return cnt
end

fun puts s do
    syscall(0x2000004, 1, s, strlen(s))
end
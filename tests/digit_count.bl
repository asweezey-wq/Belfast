include "stdlib.bl"
include "stdmem.bl"

fun solve n do
    var half = n / 2
    var half_pow = 1
    // 10 ** (n/2)
    do
        half_pow = half_pow * 10
        half = half - 1
    while half end
    var max_sum = 9 * (n/2) + 1
    var buflen = SIZE_NUM * max_sum
    var buf = belloc(buflen)
    memset(0, buf, buflen)
    var charbuf = buffer(10)
    var i = 0
    do
        var bytes = itoa(i, charbuf, 10)
        var j = 0
        var sum = 0
        do
            sum = sum + load8(charbuf+j) - 0x30
            j = j + 1
        while j < bytes end
        var idx = buf + SIZE_NUM * sum
        store64(idx, load64(idx) + 1)
        i = i + 1
    while i < half_pow end

    var count = 0
    i = 0
    do
        var tj = load64(buf + SIZE_NUM * i)
        count = count + tj * tj
        i = i + 1
    while i < max_sum end
    putu(count)
end

fun main do
    solve(6)
end